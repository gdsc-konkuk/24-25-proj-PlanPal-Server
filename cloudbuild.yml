steps:
  # 1. Gradle 빌드
  - name: 'gradle:7.6-jdk17'
    args: ['gradle', 'build', '-x', 'test']

  # 2. Docker 이미지 빌드
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t',
           'asia-northeast3-docker.pkg.dev/k8s-test-464207/k8s-server-registry/planpal-server:$SHORT_SHA',
           '.']

  # 3. Docker 이미지 푸시
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push',
           'asia-northeast3-docker.pkg.dev/k8s-test-464207/k8s-server-registry/planpal-server:$SHORT_SHA']

  # 4. GKE 클러스터에 인증
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    env: ['KUBECONFIG=/workspace/.kube/config']
    entrypoint: gcloud
    args:
      - "container"
      - "clusters"
      - "get-credentials"
      - "autopilot-cluster-1"
      - "--region"
      - "asia-northeast3"

  # 5. Deployment에 새로 빌드한 이미지 버전 적용
  - name: "gcr.io/cloud-builders/kubectl"
    env: ['KUBECONFIG=/workspace/.kube/config']
    args:
      - "set"
      - "image"
      - "deployment/planpal-server"
      - "planpal-server-container=asia-northeast3-docker.pkg.dev/k8s-test-464207/k8s-server-registry/planpal-server:$SHORT_SHA"

  # 6. Service 적용
  - name: 'gcr.io/cloud-builders/kubectl'
    env: ['KUBECONFIG=/workspace/.kube/config']
    args: ['apply', '-f', 'service.yaml']

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: E2_HIGHCPU_8

images:
  - 'asia-northeast3-docker.pkg.dev/k8s-test-464207/k8s-server-registry/planpal-server:$SHORT_SHA'